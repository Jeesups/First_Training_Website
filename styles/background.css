/* Fucking around with CSS, thats why there are few choices you might find disturbing*/
p#title{
  font-family: 'Sansita Swashed', cursive;
  font-weight: normal;
  font-style: normal;
  font-size:2em;
  color: rgb(255,255,255);
  text-shadow: 2px 2px 3px black; /* Works the same as box-shadow*/
}

body{
  /*VARIABLES*/
  --glowny-kolor: rgb(68, 224, 20);  /*declaration and initialisation of variable */
  background-color: #50505052;
  background-image: url("../images/css3-html5-logo.png");
  background-repeat: no-repeat;
  background-size: 100px 100px;
  background-position: center;
}
article{
  position:relative;
}
div.main-text{
  border: 2px solid var(--glowny-kolor);
  border-style: dashed;
  border-width: 5px;
  padding: 60px 20px 10px 30px;
  margin: 20px 10px 5px 1px;
  width: 50vw;
  height:50vh;
  /*
  background-color:blueviolet;
  background-color: #50505052;
  background-image: url("../images/css3-html5-logo.png");
  background-repeat: no-repeat;
  background-size: 100px 100px;
  background-position: center;
  background-position: left; */
  /*Yes I know above code is redundant, but Im just fucking around with it for now*/
  background-image: linear-gradient(-90deg,red 10%,green 20%, yellow 70%);
  background-image: radial-gradient(--glowny-kolor,green);
  background-image: linear-gradient(gray,rgb(54, 54, 54));
  color: white;
  overflow: auto;
  border-radius: 50px 30px 0px 20px; /* Adding additional values does different things with corners*/
  border-radius: 50%; 
}
div.main-text:hover{
  background-color:var(--glowny-kolor);
  color:white;
}
div.main-text p::first-letter{
  color:blueviolet;
  font-size:36px;
}
span{
  position:sticky;
  top:0;
  left: 50px;
  overflow:auto;
  overflow-x: scroll;
}
a:hover{
  color: var(--glowny-kolor);
}
a:visited{
  color:green;
}
#test2, #test3{ /*we can apply styles to more than one object, that way you dont have to make redundant code*/
  background-color: grey;
  width: 100px;
  height: 100px;
  margin: 20px;
  padding: 10px;
  color: white;
  box-shadow: 2px 2px 5px #000000; /* box-shadow: {how much its moved right} {how much its moved from bottom} {how big distortion is} {what color it is}*/
  box-shadow: 10px 10px 0px var(--glowny-kolor), -10px -10px 0px yellow; /* we can add more of them after comma*/
  /*Border radius, making cuts in boxes*/
  border-radius: 10px;
  /*Float*/
  float:left; 
  clear: both;
  
  
}
img{
  float:left;
}
#our-header{
  /*
  display:flex;
  /*flex-direction: row-reverse;
  flex-wrap: nowrap;*/ /*default is no-wrap, and it will resize elements if screen is resized, wrap will push object down withouth resizing*/
  /*
  justify-content: center;
  justify-content: left;
  justify-content: right;
  justify-content: space-around;
  justify-content: space-between;
  justify-content: space-evenly;
  *//*
  height: 300px;
  border:1px solid red;
  align-items: center;
  align-items: stretch;
  align-items: flex-start;
  align-items: flex-end;
  align-items: center;
  */
  /*GRID*/
  height: 300px;
  border: 1px solid var(--glowny-kolor);
  display: grid;
  grid-gap:10px; /*space between objects*/
  grid-template-columns: auto 100px auto auto;
  grid-template-rows: auto 100px;

}
.numer{
/*Flex box lepsza opcja od float*/
  background-color: royalblue;
  border:3px solid black;
  flex-grow: 1;
}
.alternatywa{
  background-color: coral;
}
/*ANIMATION*/
@keyframes probna{  /*Styl animacji*/
  /*from*/
  0% 
  {
    background-color:var(--glowny-kolor); 
    width:100px;
  }
  50%{
    background-color: yellow;
    width:100px;
  }
  /*to*/
  100%
  {
    background-color:green;
    width:200px;
  }
}
#test5{
  /*TRANSITION*/
  width:100px;
  height: 100px;
  background-color: var(--glowny-kolor);
  /*transition: width 2s ease-in-out 1s;*/
  
  /*ANIMATION*/
  
  }
#test5:hover{
  width: 200px;
  /*
  height: 200px;
  background-color: yellowgreen;
  */
  animation-name:probna;
  animation-duration:4s;
}
#main-section > a{  /*that way we address direct children of the object, not all which can be below other kids*/
  color: red;
}
*{ /* * - points to ALL ELEMENTS inside html, good to zeroing elements from default browser values*/
  margin: 0;
  padding: 0;
}